package it.teilibrary.entity;
// Generated 9-set-2016 11.00.18 by Hibernate Tools 4.3.1


import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * ManuscriptTranscription generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name="manuscript_transcription"
    ,catalog="mydb"
)
public class ManuscriptTranscription  implements java.io.Serializable {


     private ManuscriptTranscriptionId id;
     private ManuscriptScan manuscriptScan;
     private User user;
     private String manuscriptXmlTei;
     private Boolean pubblication;

    public ManuscriptTranscription() {
    }
    
    public ManuscriptTranscription(ManuscriptTranscriptionId id, ManuscriptScan manuscriptScan, User user) {
        this.id = id;
        this.manuscriptScan = manuscriptScan;
        this.user = user;
    }
    public ManuscriptTranscription(ManuscriptTranscriptionId id, ManuscriptScan manuscriptScan, User user, String manuscriptXmlTei, Boolean pubblication) {
       this.id = id;
       this.manuscriptScan = manuscriptScan;
       this.user = user;
       this.manuscriptXmlTei = manuscriptXmlTei;
       this.pubblication = pubblication;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="userUsername", column=@Column(name="user_username", nullable=false, length=16) ), 
        @AttributeOverride(name="userRoleIdrole", column=@Column(name="user_role_idrole", nullable=false) ), 
        @AttributeOverride(name="manuscriptScanIdmanuscriptScan", column=@Column(name="manuscript_scan_idmanuscript_scan", nullable=false) ) } )
    public ManuscriptTranscriptionId getId() {
        return this.id;
    }
    
    public void setId(ManuscriptTranscriptionId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="manuscript_scan_idmanuscript_scan", nullable=false, insertable=false, updatable=false)
    public ManuscriptScan getManuscriptScan() {
        return this.manuscriptScan;
    }
    
    public void setManuscriptScan(ManuscriptScan manuscriptScan) {
        this.manuscriptScan = manuscriptScan;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="user_username", referencedColumnName="username", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="user_role_idrole", referencedColumnName="role_idrole", nullable=false, insertable=false, updatable=false) } )
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

    
    @Column(name="manuscript_xml_tei")
    public String getManuscriptXmlTei() {
        return this.manuscriptXmlTei;
    }
    
    public void setManuscriptXmlTei(String manuscriptXmlTei) {
        this.manuscriptXmlTei = manuscriptXmlTei;
    }

    
    @Column(name="pubblication")
    public Boolean getPubblication() {
        return this.pubblication;
    }
    
    public void setPubblication(Boolean pubblication) {
        this.pubblication = pubblication;
    }




}


